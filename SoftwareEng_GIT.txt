1. 파일의 버전을 시간에 따라 기록하고 관리하는 시스템이다.
2. GIT은 사본 파일을 로컬 환경에 저장하므로 중앙 서버에 문제가 생겨도 로컬 저장소에 커밋할 수 있다.
3. -p를 사용하면 변경 사항을 터미널에서 직접 체크하고 스테이징 영역으로 넘길 수 있다.
4-1. Untracked files
4-2. Unmodified
4-3. Modified
4-4. Staged
4-5. Unmodified
5. Hello World!
   What a wonderful world1
6. file2는 master 브랜치에서 커밋된 파일이므로 branch2 저장소에는 존재하지 않는다
7. ! [branch2] branch2 commit
    * [master] file2 commit
   --
    * [master] file2 commit
   +  [branch2] branch2 commit
   +* [master^] file1 commit2
8. https://github.com/SeungJae928/SoftwareEng.git
9. merge는 새로운 HEAD를 생성하고 병합되고, rebase는 기존 커밋을 재정렬하여 코드를 합친다.
10. cherry-pick은 다른 브랜치의 커밋을 내가 적용시키길 원하는 브랜치에 적용시키는 명령어다.
11. git rebase -i는 직전 커밋을 수정하거나 관리할 수 있다. git rebase -i를 통해 직전의 커밋을 출력하고 edit [해시] [메세지]를 통해 커밋 순서를 바꿀 수 있다.